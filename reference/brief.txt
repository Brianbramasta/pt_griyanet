Kamu diminta membuat aplikasi web manajemen pelanggan dan tiket gangguan (seperti sistem helpdesk untuk perusahaan ISP).
Fungsinya: mencatat data pelanggan, membuat tiket jika ada masalah jaringan, dan memantau status perbaikannya.

Durasi pengerjaan: 4 hari setelah lolos interview HR.
Teknologi wajib:

React.js + React Router

Validasi form

Filter data

Repository pattern

(Typescript jadi nilai plus)

json server untuk crud datanya

💡 Konsep Aplikasi

Ada tiga peran pengguna utama:

Customer Service (CS)

Mendaftarkan pelanggan baru

Membuat tiket gangguan saat pelanggan lapor masalah

Agent NOC (Network Operations Center)

Menangani tiket yang dibuat CS

Update status tiket (misal: in progress → resolved → closed)

Admin

Memantau semua data

Mengelola pengguna, ticket dan laporan

🧩 Fitur yang Harus Dibuat
1. Modul Pelanggan

CRUD (buat, lihat, ubah, hapus pelanggan)

Pencarian pelanggan (berdasarkan nama, ID, nomor HP, dll)

2. Modul Tiket Gangguan

CRUD tiket (buat tiket baru, ubah status, hapus jika perlu)

Aturan status:

Tidak bisa langsung “Closed”

Harus lewat “Resolved” dulu → menunggu konfirmasi pelanggan

Ada timeline/riwayat status setiap tiket

3. Autentikasi dan Role User

Login pakai JWT atau Session

Role: Admin, NOC, dan CS → masing-masing punya level akses berbeda

4. Antarmuka (UI)

Halaman Login

Halaman Pelanggan

Halaman Tiket (dengan filter & pencarian)

Halaman Detail Tiket + Timeline

5. Data

Kamu bisa pilih salah satu:

Pakai file JSON lokal (simulasi saja, cocok kalau mau cepat)

Pakai Supabase (lebih realistis, bisa CRUD dan autentikasi real-time)

🧾 Presentasi Proyek (10–15 menit)

Setelah selesai coding, kamu akan memaparkan hasil dan cara kerja proyekmu:

Struktur proyek & arsitektur folder
(misal: components, pages, services, hooks, dsb)

Integrasi data (pakai JSON atau Supabase)

Alasan pemilihan teknologi

Kenapa React.js

Pustaka tambahan (misal Axios, Zustand, Tailwind)

Demo fitur utama

CRUD pelanggan/tiket

Login & proteksi halaman

Filter/pencarian

Keamanan & Validasi form

README & dokumentasi proyek

🧱 Inti Tes Ini

Mereka ingin melihat kemampuan kamu dalam:

Membangun aplikasi web React dari nol

Mengelola state dan data (CRUD, filter, login)

Membuat UI yang rapi dan fungsional

Menjelaskan struktur dan keputusan teknis dengan jelas